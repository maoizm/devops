# -*- mode: ruby -*-
# vi: set ft=ruby :

$apache_ip = "11.12.13.100"
$apache_host = "apache.dev"
$apache_script = <<SCRIPT
if [ -e /var/www ]
then
	rm -rf /var/www
fi
ln -s /vagrant/www /var/www
a2enmod rewrite
cp -f /vagrant/etc.apache2.sites-available.apache.dev.conf /etc/apache2/sites-available/apache.dev.conf
cp -f /vagrant/etc.apache2.sites-available.php.dev.conf /etc/apache2/sites-available/php.dev.conf
a2ensite apache.dev.conf
a2ensite php.dev.conf
service apache2 reload
SCRIPT

Vagrant.configure(2) do |config|

  config.vm.define "apache" do |apache|
    apache.vm.box = "mao/lamp32"
    apache.vm.network "private_network", ip: $apache_ip
    apache.vm.hostname = $apache_host
    apache.vm.provider "virtualbox" do |vb|
      vb.name = $apache_host
    end
    apache.vm.provision "shell", inline: $apache_script
  end
#  config.hostsupdater.aliases = ["www.apache.local", "a.l", "php.local", "php.local", "p.l"]

  # Create a forwarded port mapping which allows access to a specific port within the machine from a port on the host machine. In the example below, accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a public network, which generally matched to bridged network. Bridged networks make the machine appear as another physical device on your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is the path on the host to the actual folder. The second argument is the path on the guest to mount the folder. And the optional third argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   sudo apt-get update
  #   sudo apt-get install -y apache2
  # SHELL
end
